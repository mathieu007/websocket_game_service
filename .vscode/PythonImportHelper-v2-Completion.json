[
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "URLRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "URLRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "AllowedHostsOriginValidator",
        "importPath": "channels.security.websocket",
        "description": "channels.security.websocket",
        "isExtraImport": true,
        "detail": "channels.security.websocket",
        "documentation": {}
    },
    {
        "label": "AllowedHostsOriginValidator",
        "importPath": "channels.security.websocket",
        "description": "channels.security.websocket",
        "isExtraImport": true,
        "detail": "channels.security.websocket",
        "documentation": {}
    },
    {
        "label": "AuthMiddlewareStack",
        "importPath": "channels.auth",
        "description": "channels.auth",
        "isExtraImport": true,
        "detail": "channels.auth",
        "documentation": {}
    },
    {
        "label": "AuthMiddlewareStack",
        "importPath": "channels.auth",
        "description": "channels.auth",
        "isExtraImport": true,
        "detail": "channels.auth",
        "documentation": {}
    },
    {
        "label": "game_socket.routing",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "game_socket.routing",
        "description": "game_socket.routing",
        "detail": "game_socket.routing",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "apps",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "sleep",
        "importPath": "asyncio",
        "description": "asyncio",
        "isExtraImport": true,
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "GameListView",
        "importPath": "games.views",
        "description": "games.views",
        "isExtraImport": true,
        "detail": "games.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "async_to_sync",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "send_mass_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Game",
        "importPath": "games.models",
        "description": "games.models",
        "isExtraImport": true,
        "detail": "games.models",
        "documentation": {}
    },
    {
        "label": "Game",
        "importPath": "games.models",
        "description": "games.models",
        "isExtraImport": true,
        "detail": "games.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "importPath": "games.models",
        "description": "games.models",
        "isExtraImport": true,
        "detail": "games.models",
        "documentation": {}
    },
    {
        "label": "Game",
        "importPath": "games.models",
        "description": "games.models",
        "isExtraImport": true,
        "detail": "games.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "importPath": "games.models",
        "description": "games.models",
        "isExtraImport": true,
        "detail": "games.models",
        "documentation": {}
    },
    {
        "label": "Content",
        "importPath": "games.models",
        "description": "games.models",
        "isExtraImport": true,
        "detail": "games.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "importPath": "games.models",
        "description": "games.models",
        "isExtraImport": true,
        "detail": "games.models",
        "documentation": {}
    },
    {
        "label": "Game",
        "importPath": "games.models",
        "description": "games.models",
        "isExtraImport": true,
        "detail": "games.models",
        "documentation": {}
    },
    {
        "label": "cache_page",
        "importPath": "django.views.decorators.cache",
        "description": "django.views.decorators.cache",
        "isExtraImport": true,
        "detail": "django.views.decorators.cache",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "FormView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic.list",
        "description": "django.views.generic.list",
        "isExtraImport": true,
        "detail": "django.views.generic.list",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic.list",
        "description": "django.views.generic.list",
        "isExtraImport": true,
        "detail": "django.views.generic.list",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic.detail",
        "description": "django.views.generic.detail",
        "isExtraImport": true,
        "detail": "django.views.generic.detail",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic.detail",
        "description": "django.views.generic.detail",
        "isExtraImport": true,
        "detail": "django.views.generic.detail",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "PermissionRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "BasePermission",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "BasicAuthentication",
        "importPath": "rest_framework.authentication",
        "description": "rest_framework.authentication",
        "isExtraImport": true,
        "detail": "rest_framework.authentication",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "SubjectSerializer",
        "importPath": "games.api.serializers",
        "description": "games.api.serializers",
        "isExtraImport": true,
        "detail": "games.api.serializers",
        "documentation": {}
    },
    {
        "label": "GameSerializer",
        "importPath": "games.api.serializers",
        "description": "games.api.serializers",
        "isExtraImport": true,
        "detail": "games.api.serializers",
        "documentation": {}
    },
    {
        "label": "GameWithContentsSerializer",
        "importPath": "games.api.serializers",
        "description": "games.api.serializers",
        "isExtraImport": true,
        "detail": "games.api.serializers",
        "documentation": {}
    },
    {
        "label": "IsJoined",
        "importPath": "games.api.permissions",
        "description": "games.api.permissions",
        "isExtraImport": true,
        "detail": "games.api.permissions",
        "documentation": {}
    },
    {
        "label": "games.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "games.fields",
        "description": "games.fields",
        "detail": "games.fields",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "ObjectDoesNotExist",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "inlineformset_factory",
        "importPath": "django.forms.models",
        "description": "django.forms.models",
        "isExtraImport": true,
        "detail": "django.forms.models",
        "documentation": {}
    },
    {
        "label": "modelform_factory",
        "importPath": "django.forms.models",
        "description": "django.forms.models",
        "isExtraImport": true,
        "detail": "django.forms.models",
        "documentation": {}
    },
    {
        "label": "ContentType",
        "importPath": "django.contrib.contenttypes.models",
        "description": "django.contrib.contenttypes.models",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.models",
        "documentation": {}
    },
    {
        "label": "GenericForeignKey",
        "importPath": "django.contrib.contenttypes.fields",
        "description": "django.contrib.contenttypes.fields",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.fields",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "TemplateResponseMixin",
        "importPath": "django.views.generic.base",
        "description": "django.views.generic.base",
        "isExtraImport": true,
        "detail": "django.views.generic.base",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views.generic.base",
        "description": "django.views.generic.base",
        "isExtraImport": true,
        "detail": "django.views.generic.base",
        "documentation": {}
    },
    {
        "label": "cache",
        "importPath": "django.core.cache",
        "description": "django.core.cache",
        "isExtraImport": true,
        "detail": "django.core.cache",
        "documentation": {}
    },
    {
        "label": "CsrfExemptMixin",
        "importPath": "braces.views",
        "description": "braces.views",
        "isExtraImport": true,
        "detail": "braces.views",
        "documentation": {}
    },
    {
        "label": "JsonRequestResponseMixin",
        "importPath": "braces.views",
        "description": "braces.views",
        "isExtraImport": true,
        "detail": "braces.views",
        "documentation": {}
    },
    {
        "label": "GameJoinForm",
        "importPath": "players.forms",
        "description": "players.forms",
        "isExtraImport": true,
        "detail": "players.forms",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent.parent\n# the websocket micro-service do not need any database,\n# but for backwards compatibility, we are iniatilizing one.\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": os.path.join(BASE_DIR, \"db.sqlite3\"),\n    }\n}\n# SECURITY WARNING: keep the secret key used in production secret!",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": os.path.join(BASE_DIR, \"db.sqlite3\"),\n    }\n}\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-$4uoa0&@c^0bl=4%cmy8(rkhcs=4-)389myz7e@fwy2x7#tl4g\"\n# SECURITY WARNING: don't run with debug turned on in production!\nALLOWED_HOSTS = [",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "SECRET_KEY = \"django-insecure-$4uoa0&@c^0bl=4%cmy8(rkhcs=4-)389myz7e@fwy2x7#tl4g\"\n# SECURITY WARNING: don't run with debug turned on in production!\nALLOWED_HOSTS = [\n    \"127.0.0.1\",\n    \"0.0.0.0\",\n    \"localhost\",\n    \"144.217.252.155\",\n    \"dev.ft-transcendence.com\",\n    \"ft-transcendence.com\",\n    \"www.dev.ft-transcendence.com\",",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "ALLOWED_HOSTS = [\n    \"127.0.0.1\",\n    \"0.0.0.0\",\n    \"localhost\",\n    \"144.217.252.155\",\n    \"dev.ft-transcendence.com\",\n    \"ft-transcendence.com\",\n    \"www.dev.ft-transcendence.com\",\n    \"www.ft-transcendence.com\",\n]",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "INSTALLED_APPS = [\n    # 'games.apps.GamesConfig',\n    # 'django.contrib.admin',\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    # 'django.contrib.auth.models.Permission',\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # 'players.apps.playersConfig',",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    # 'django.middleware.cache.UpdateCacheMiddleware',\n    \"django.middleware.common.CommonMiddleware\",\n    # 'django.middleware.cache.FetchFromCacheMiddleware',\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\n# USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATIC_ROOT = BASE_DIR / \"static\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "TIME_ZONE = \"UTC\"\n# USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATIC_ROOT = BASE_DIR / \"static\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nSTATIC_ROOT = BASE_DIR / \"static\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "STATIC_URL = \"static/\"\nSTATIC_ROOT = BASE_DIR / \"static\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# from django.urls import reverse_lazy\n# LOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\n# CACHES = {",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / \"static\"\nMEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# from django.urls import reverse_lazy\n# LOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\n# CACHES = {\n#     'default': {",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "MEDIA_URL = \"media/\"\nMEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# from django.urls import reverse_lazy\n# LOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\n# CACHES = {\n#     'default': {\n#         'BACKEND': 'django.core.cache.backends.redis.RedisCache',",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / \"media\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# from django.urls import reverse_lazy\n# LOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\n# CACHES = {\n#     'default': {\n#         'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n#         'LOCATION': 'redis://127.0.0.1:6379',",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# from django.urls import reverse_lazy\n# LOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\n# CACHES = {\n#     'default': {\n#         'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n#         'LOCATION': 'redis://127.0.0.1:6379',\n#     }\n# }\n# CACHE_MIDDLEWARE_ALIAS = 'default'",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "INTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# REST_FRAMEWORK = {\n#     'DEFAULT_PERMISSION_CLASSES': [\n#       'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n#     ]\n# }\nASGI_APPLICATION = \"game_config.asgi.application\"\nCHANNEL_LAYERS = {",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "ASGI_APPLICATION = \"game_config.asgi.application\"\nCHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels_redis.core.RedisChannelLayer\",\n        \"CONFIG\": {\n            \"hosts\": [(\"cache\", 6379)],\n            \"capacity\": 5000,\n            \"expiry\": 5,\n            # \"connection_kwargs\": {\n            #     \"max_connections\": 60,",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "CHANNEL_LAYERS",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "CHANNEL_LAYERS = {\n    \"default\": {\n        \"BACKEND\": \"channels_redis.core.RedisChannelLayer\",\n        \"CONFIG\": {\n            \"hosts\": [(\"cache\", 6379)],\n            \"capacity\": 5000,\n            \"expiry\": 5,\n            # \"connection_kwargs\": {\n            #     \"max_connections\": 60,\n            #     \"health_check_interval\": 30,",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "DJANGO_SETTINGS_MODULE",
        "kind": 5,
        "importPath": "app.game_config.settings.base",
        "description": "app.game_config.settings.base",
        "peekOfCode": "DJANGO_SETTINGS_MODULE = \"game_config.settings.local\"\n# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'",
        "detail": "app.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app.game_config.settings.local",
        "description": "app.game_config.settings.local",
        "peekOfCode": "DEBUG = True\n# CHANNEL_LAYERS = {\n#     'default': {\n#         'BACKEND': 'channels_redis.core.RedisChannelLayer',\n#         'CONFIG': {\n#             \"hosts\": [('redis', 6379)],\n#         },\n#     },\n# }\nASGI_APPLICATION = 'game_config.asgi.application'",
        "detail": "app.game_config.settings.local",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "app.game_config.settings.local",
        "description": "app.game_config.settings.local",
        "peekOfCode": "ASGI_APPLICATION = 'game_config.asgi.application'",
        "detail": "app.game_config.settings.local",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app.game_config.settings.prod",
        "description": "app.game_config.settings.prod",
        "peekOfCode": "DEBUG = False\nADMINS = [\n    ('Mathieu Roy'),\n]\nALLOWED_HOSTS = ['127.0.0.1']\nREDIS_URL = 'redis://cache:6379'\n# CHANNEL_LAYERS = {\n#     'default': {\n#         'BACKEND': 'channels_redis.core.RedisChannelLayer',\n#         'CONFIG': {",
        "detail": "app.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "ADMINS",
        "kind": 5,
        "importPath": "app.game_config.settings.prod",
        "description": "app.game_config.settings.prod",
        "peekOfCode": "ADMINS = [\n    ('Mathieu Roy'),\n]\nALLOWED_HOSTS = ['127.0.0.1']\nREDIS_URL = 'redis://cache:6379'\n# CHANNEL_LAYERS = {\n#     'default': {\n#         'BACKEND': 'channels_redis.core.RedisChannelLayer',\n#         'CONFIG': {\n#             \"hosts\": [('redis', 6379)],",
        "detail": "app.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "app.game_config.settings.prod",
        "description": "app.game_config.settings.prod",
        "peekOfCode": "ALLOWED_HOSTS = ['127.0.0.1']\nREDIS_URL = 'redis://cache:6379'\n# CHANNEL_LAYERS = {\n#     'default': {\n#         'BACKEND': 'channels_redis.core.RedisChannelLayer',\n#         'CONFIG': {\n#             \"hosts\": [('redis', 6379)],\n#         },\n#     },\n# }",
        "detail": "app.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "REDIS_URL",
        "kind": 5,
        "importPath": "app.game_config.settings.prod",
        "description": "app.game_config.settings.prod",
        "peekOfCode": "REDIS_URL = 'redis://cache:6379'\n# CHANNEL_LAYERS = {\n#     'default': {\n#         'BACKEND': 'channels_redis.core.RedisChannelLayer',\n#         'CONFIG': {\n#             \"hosts\": [('redis', 6379)],\n#         },\n#     },\n# }\n# CACHES['default']['LOCATION'] = REDIS_URL",
        "detail": "app.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "CSRF_COOKIE_SECURE",
        "kind": 5,
        "importPath": "app.game_config.settings.prod",
        "description": "app.game_config.settings.prod",
        "peekOfCode": "CSRF_COOKIE_SECURE = True\nSESSION_COOKIE_SECURE = True\nSECURE_SSL_REDIRECT = True",
        "detail": "app.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_SECURE",
        "kind": 5,
        "importPath": "app.game_config.settings.prod",
        "description": "app.game_config.settings.prod",
        "peekOfCode": "SESSION_COOKIE_SECURE = True\nSECURE_SSL_REDIRECT = True",
        "detail": "app.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "SECURE_SSL_REDIRECT",
        "kind": 5,
        "importPath": "app.game_config.settings.prod",
        "description": "app.game_config.settings.prod",
        "peekOfCode": "SECURE_SSL_REDIRECT = True",
        "detail": "app.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "django_asgi_app",
        "kind": 5,
        "importPath": "app.game_config.asgi",
        "description": "app.game_config.asgi",
        "peekOfCode": "django_asgi_app = get_asgi_application()\napplication = ProtocolTypeRouter({\n    'http': django_asgi_app,\n    'websocket': AllowedHostsOriginValidator(\n        AuthMiddlewareStack(\n            URLRouter(\n                game_socket.routing.websocket_urlpatterns\n            )\n        )\n    ),",
        "detail": "app.game_config.asgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.game_config.asgi",
        "description": "app.game_config.asgi",
        "peekOfCode": "application = ProtocolTypeRouter({\n    'http': django_asgi_app,\n    'websocket': AllowedHostsOriginValidator(\n        AuthMiddlewareStack(\n            URLRouter(\n                game_socket.routing.websocket_urlpatterns\n            )\n        )\n    ),\n})",
        "detail": "app.game_config.asgi",
        "documentation": {}
    },
    {
        "label": "GameSocketConfig",
        "kind": 6,
        "importPath": "app.game_socket.apps",
        "description": "app.game_socket.apps",
        "peekOfCode": "class GameSocketConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'game_socket'",
        "detail": "app.game_socket.apps",
        "documentation": {}
    },
    {
        "label": "MessageType",
        "kind": 6,
        "importPath": "app.game_socket.consumers",
        "description": "app.game_socket.consumers",
        "peekOfCode": "class MessageType:\n    PING = 0\n    PONG = 1\n    GAME_POSITION = 2\n    GAME_START = 3\n    GAME_END = 4\nclass GameSocketConsumer(AsyncWebsocketConsumer):\n    message_handlers = [None] * 100\n    pattern = r\"\\\"type\\\"\\s*:\\s*(\\d+)\"\n    async def process_msg(self, msgType, message):",
        "detail": "app.game_socket.consumers",
        "documentation": {}
    },
    {
        "label": "GameSocketConsumer",
        "kind": 6,
        "importPath": "app.game_socket.consumers",
        "description": "app.game_socket.consumers",
        "peekOfCode": "class GameSocketConsumer(AsyncWebsocketConsumer):\n    message_handlers = [None] * 100\n    pattern = r\"\\\"type\\\"\\s*:\\s*(\\d+)\"\n    async def process_msg(self, msgType, message):\n        if 0 <= msgType < len(self.message_handlers):\n            handler = self.message_handlers[msgType]\n            if handler:\n                await handler(self, message)\n            else:\n                print(f\"No handler for message type: {msgType}\")",
        "detail": "app.game_socket.consumers",
        "documentation": {}
    },
    {
        "label": "GameSocketConsumer.message_handlers[MessageType.PING]",
        "kind": 5,
        "importPath": "app.game_socket.consumers",
        "description": "app.game_socket.consumers",
        "peekOfCode": "GameSocketConsumer.message_handlers[MessageType.PING] = GameSocketConsumer.handle_ping\nGameSocketConsumer.message_handlers[MessageType.PONG] = GameSocketConsumer.handle_pong\nGameSocketConsumer.message_handlers[MessageType.GAME_POSITION] = (\n    GameSocketConsumer.handle_positions\n)",
        "detail": "app.game_socket.consumers",
        "documentation": {}
    },
    {
        "label": "GameSocketConsumer.message_handlers[MessageType.PONG]",
        "kind": 5,
        "importPath": "app.game_socket.consumers",
        "description": "app.game_socket.consumers",
        "peekOfCode": "GameSocketConsumer.message_handlers[MessageType.PONG] = GameSocketConsumer.handle_pong\nGameSocketConsumer.message_handlers[MessageType.GAME_POSITION] = (\n    GameSocketConsumer.handle_positions\n)",
        "detail": "app.game_socket.consumers",
        "documentation": {}
    },
    {
        "label": "GameSocketConsumer.message_handlers[MessageType.GAME_POSITION]",
        "kind": 5,
        "importPath": "app.game_socket.consumers",
        "description": "app.game_socket.consumers",
        "peekOfCode": "GameSocketConsumer.message_handlers[MessageType.GAME_POSITION] = (\n    GameSocketConsumer.handle_positions\n)",
        "detail": "app.game_socket.consumers",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "app.game_socket.routing",
        "description": "app.game_socket.routing",
        "peekOfCode": "websocket_urlpatterns = [\n    re_path(r'ws/game/(?P<game_id>\\d+)/$', consumers.GameSocketConsumer.as_asgi()),\n]",
        "detail": "app.game_socket.routing",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app.manage",
        "description": "app.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'game_config.settings.local')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "app.manage",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent.parent\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-$4uoa0&@c^0bl=4%cmy8(rkhcs=4-)389myz7e@fwy2x7#tl4g'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"127.0.0.1\", \"0.0.0.0\", \"localhost\", \"144.217.252.155\", \"dev.ft-transcendence.com\", \"ft-transcendence.com\"]\n# Application definition\nINSTALLED_APPS = [\n    'games.apps.GamesConfig',\n    'django.contrib.admin',",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "SECRET_KEY = 'django-insecure-$4uoa0&@c^0bl=4%cmy8(rkhcs=4-)389myz7e@fwy2x7#tl4g'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"127.0.0.1\", \"0.0.0.0\", \"localhost\", \"144.217.252.155\", \"dev.ft-transcendence.com\", \"ft-transcendence.com\"]\n# Application definition\nINSTALLED_APPS = [\n    'games.apps.GamesConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"127.0.0.1\", \"0.0.0.0\", \"localhost\", \"144.217.252.155\", \"dev.ft-transcendence.com\", \"ft-transcendence.com\"]\n# Application definition\nINSTALLED_APPS = [\n    'games.apps.GamesConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "ALLOWED_HOSTS = [\"127.0.0.1\", \"0.0.0.0\", \"localhost\", \"144.217.252.155\", \"dev.ft-transcendence.com\", \"ft-transcendence.com\"]\n# Application definition\nINSTALLED_APPS = [\n    'games.apps.GamesConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "INSTALLED_APPS = [\n    'games.apps.GamesConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'players.apps.playersConfig',\n    'embed_video',",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "MIDDLEWARE = [\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    # 'django.middleware.cache.UpdateCacheMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    # 'django.middleware.cache.FetchFromCacheMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "ROOT_URLCONF = 'game_config.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "WSGI_APPLICATION = 'game_config.wsgi.application'\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nfrom django.urls import reverse_lazy\nLOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\nCACHES = {",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / 'static'\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nfrom django.urls import reverse_lazy\nLOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\nCACHES = {\n    'default': {",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "MEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nfrom django.urls import reverse_lazy\nLOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nfrom django.urls import reverse_lazy\nLOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': 'redis://127.0.0.1:6379',",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nfrom django.urls import reverse_lazy\nLOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': 'redis://127.0.0.1:6379',\n    }\n}\nCACHE_MIDDLEWARE_ALIAS = 'default'",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "LOGIN_REDIRECT_URL = reverse_lazy('gamer_game_list')\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': 'redis://127.0.0.1:6379',\n    }\n}\nCACHE_MIDDLEWARE_ALIAS = 'default'\nCACHE_MIDDLEWARE_SECONDS = 60 * 15\nCACHE_MIDDLEWARE_KEY_PREFIX = 'game_config'",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "CACHES",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "CACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.redis.RedisCache',\n        'LOCATION': 'redis://127.0.0.1:6379',\n    }\n}\nCACHE_MIDDLEWARE_ALIAS = 'default'\nCACHE_MIDDLEWARE_SECONDS = 60 * 15\nCACHE_MIDDLEWARE_KEY_PREFIX = 'game_config'\nINTERNAL_IPS = [",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "CACHE_MIDDLEWARE_ALIAS",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "CACHE_MIDDLEWARE_ALIAS = 'default'\nCACHE_MIDDLEWARE_SECONDS = 60 * 15\nCACHE_MIDDLEWARE_KEY_PREFIX = 'game_config'\nINTERNAL_IPS = [\n    '127.0.0.1',\n]\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n      'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    ]",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "CACHE_MIDDLEWARE_SECONDS",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "CACHE_MIDDLEWARE_SECONDS = 60 * 15\nCACHE_MIDDLEWARE_KEY_PREFIX = 'game_config'\nINTERNAL_IPS = [\n    '127.0.0.1',\n]\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n      'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    ]\n}",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "CACHE_MIDDLEWARE_KEY_PREFIX",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "CACHE_MIDDLEWARE_KEY_PREFIX = 'game_config'\nINTERNAL_IPS = [\n    '127.0.0.1',\n]\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n      'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    ]\n}\nASGI_APPLICATION = 'game_config.asgi.application'",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "INTERNAL_IPS = [\n    '127.0.0.1',\n]\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n      'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    ]\n}\nASGI_APPLICATION = 'game_config.asgi.application'\nCHANNEL_LAYERS = {",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n      'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    ]\n}\nASGI_APPLICATION = 'game_config.asgi.application'\nCHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "ASGI_APPLICATION = 'game_config.asgi.application'\nCHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {\n            'hosts': [('127.0.0.1', 6379)],\n        },\n    },\n}\nDJANGO_SETTINGS_MODULE='game_config.settings.local'",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "CHANNEL_LAYERS",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "CHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {\n            'hosts': [('127.0.0.1', 6379)],\n        },\n    },\n}\nDJANGO_SETTINGS_MODULE='game_config.settings.local'\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.base",
        "description": "app_db_tests.game_config.settings.base",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'",
        "detail": "app_db_tests.game_config.settings.base",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.local",
        "description": "app_db_tests.game_config.settings.local",
        "peekOfCode": "DEBUG = True\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\nWSGI_APPLICATION = 'game_config.wsgi.application'\nASGI_APPLICATION = 'game_config.asgi.application'",
        "detail": "app_db_tests.game_config.settings.local",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.local",
        "description": "app_db_tests.game_config.settings.local",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\nWSGI_APPLICATION = 'game_config.wsgi.application'\nASGI_APPLICATION = 'game_config.asgi.application'",
        "detail": "app_db_tests.game_config.settings.local",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.local",
        "description": "app_db_tests.game_config.settings.local",
        "peekOfCode": "WSGI_APPLICATION = 'game_config.wsgi.application'\nASGI_APPLICATION = 'game_config.asgi.application'",
        "detail": "app_db_tests.game_config.settings.local",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.local",
        "description": "app_db_tests.game_config.settings.local",
        "peekOfCode": "ASGI_APPLICATION = 'game_config.asgi.application'",
        "detail": "app_db_tests.game_config.settings.local",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.prod",
        "description": "app_db_tests.game_config.settings.prod",
        "peekOfCode": "DEBUG = False\nADMINS = [\n    ('Mike Zigberman', 'mikezigberman@yahoo.com'),\n]\nALLOWED_HOSTS = ['127.0.0.1']\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.environ.get('POSTGRES_DB'),\n        'USER': os.environ.get('POSTGRES_USER'),",
        "detail": "app_db_tests.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "ADMINS",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.prod",
        "description": "app_db_tests.game_config.settings.prod",
        "peekOfCode": "ADMINS = [\n    ('Mike Zigberman', 'mikezigberman@yahoo.com'),\n]\nALLOWED_HOSTS = ['127.0.0.1']\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.environ.get('POSTGRES_DB'),\n        'USER': os.environ.get('POSTGRES_USER'),\n        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),",
        "detail": "app_db_tests.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.prod",
        "description": "app_db_tests.game_config.settings.prod",
        "peekOfCode": "ALLOWED_HOSTS = ['127.0.0.1']\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.environ.get('POSTGRES_DB'),\n        'USER': os.environ.get('POSTGRES_USER'),\n        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),\n        'HOST': 'db',\n        'PORT': 5432,\n    }",
        "detail": "app_db_tests.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.prod",
        "description": "app_db_tests.game_config.settings.prod",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.environ.get('POSTGRES_DB'),\n        'USER': os.environ.get('POSTGRES_USER'),\n        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),\n        'HOST': 'db',\n        'PORT': 5432,\n    }\n}",
        "detail": "app_db_tests.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "REDIS_URL",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.prod",
        "description": "app_db_tests.game_config.settings.prod",
        "peekOfCode": "REDIS_URL = 'redis://cache:6379'\nCACHES['default']['LOCATION'] = REDIS_URL\nCHANNEL_LAYERS['default']['CONFIG']['hosts'] = [REDIS_URL]\nCSRF_COOKIE_SECURE = True\nSESSION_COOKIE_SECURE = True\nSECURE_SSL_REDIRECT = True",
        "detail": "app_db_tests.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "CACHES['default']['LOCATION']",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.prod",
        "description": "app_db_tests.game_config.settings.prod",
        "peekOfCode": "CACHES['default']['LOCATION'] = REDIS_URL\nCHANNEL_LAYERS['default']['CONFIG']['hosts'] = [REDIS_URL]\nCSRF_COOKIE_SECURE = True\nSESSION_COOKIE_SECURE = True\nSECURE_SSL_REDIRECT = True",
        "detail": "app_db_tests.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "CHANNEL_LAYERS['default']['CONFIG']['hosts']",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.prod",
        "description": "app_db_tests.game_config.settings.prod",
        "peekOfCode": "CHANNEL_LAYERS['default']['CONFIG']['hosts'] = [REDIS_URL]\nCSRF_COOKIE_SECURE = True\nSESSION_COOKIE_SECURE = True\nSECURE_SSL_REDIRECT = True",
        "detail": "app_db_tests.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "CSRF_COOKIE_SECURE",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.prod",
        "description": "app_db_tests.game_config.settings.prod",
        "peekOfCode": "CSRF_COOKIE_SECURE = True\nSESSION_COOKIE_SECURE = True\nSECURE_SSL_REDIRECT = True",
        "detail": "app_db_tests.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_SECURE",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.prod",
        "description": "app_db_tests.game_config.settings.prod",
        "peekOfCode": "SESSION_COOKIE_SECURE = True\nSECURE_SSL_REDIRECT = True",
        "detail": "app_db_tests.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "SECURE_SSL_REDIRECT",
        "kind": 5,
        "importPath": "app_db_tests.game_config.settings.prod",
        "description": "app_db_tests.game_config.settings.prod",
        "peekOfCode": "SECURE_SSL_REDIRECT = True",
        "detail": "app_db_tests.game_config.settings.prod",
        "documentation": {}
    },
    {
        "label": "django_asgi_app",
        "kind": 5,
        "importPath": "app_db_tests.game_config.asgi",
        "description": "app_db_tests.game_config.asgi",
        "peekOfCode": "django_asgi_app = get_asgi_application()\napplication = ProtocolTypeRouter({\n    'http': django_asgi_app,\n    'websocket': AuthMiddlewareStack(URLRouter(game_socket.routing.websocket_urlpatterns)),\n})",
        "detail": "app_db_tests.game_config.asgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app_db_tests.game_config.asgi",
        "description": "app_db_tests.game_config.asgi",
        "peekOfCode": "application = ProtocolTypeRouter({\n    'http': django_asgi_app,\n    'websocket': AuthMiddlewareStack(URLRouter(game_socket.routing.websocket_urlpatterns)),\n})",
        "detail": "app_db_tests.game_config.asgi",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app_db_tests.game_config.urls",
        "description": "app_db_tests.game_config.urls",
        "peekOfCode": "urlpatterns = [\n    path('accounts/login/', auth_views.LoginView.as_view(), name='login'),\n    path('accounts/logout/', auth_views.LogoutView.as_view(),  name='logout'),\n    path('admin/', admin.site.urls),\n    path('game/', include('games.urls')),\n    path('', GameListView.as_view(), name='game_list'),\n    path('players/', include('players.urls')),\n    path('api/', include('games.api.urls', namespace='api')),\n    path('game_socket/', include('game_socket.urls', namespace='game_socket')),\n    path('__debug__/', include('debug_toolbar.urls')),",
        "detail": "app_db_tests.game_config.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app_db_tests.game_config.wsgi",
        "description": "app_db_tests.game_config.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "app_db_tests.game_config.wsgi",
        "documentation": {}
    },
    {
        "label": "GameSocketConfig",
        "kind": 6,
        "importPath": "app_db_tests.game_socket.apps",
        "description": "app_db_tests.game_socket.apps",
        "peekOfCode": "class GameSocketConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'game_socket'",
        "detail": "app_db_tests.game_socket.apps",
        "documentation": {}
    },
    {
        "label": "GameSocketConsumer",
        "kind": 6,
        "importPath": "app_db_tests.game_socket.consumers",
        "description": "app_db_tests.game_socket.consumers",
        "peekOfCode": "class GameSocketConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        self.user = self.scope['user']\n        self.id = self.scope['url_route']['kwargs']['game_id']\n        self.room_group_name = f'game_socket_{self.id}'\n        await self.channel_layer.group_add(\n            self.room_group_name,\n            self.channel_name\n        )\n        await self.accept()",
        "detail": "app_db_tests.game_socket.consumers",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "app_db_tests.game_socket.routing",
        "description": "app_db_tests.game_socket.routing",
        "peekOfCode": "websocket_urlpatterns = [\n    re_path(r'ws/game_socket/room/(?P<game_id>\\d+)/$', consumers.GameSocketConsumer.as_asgi()),\n]",
        "detail": "app_db_tests.game_socket.routing",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "app_db_tests.game_socket.urls",
        "description": "app_db_tests.game_socket.urls",
        "peekOfCode": "app_name = 'game_socket'\nurlpatterns = [\n    path('room/<int:game_id>/', views.game_game_socket_room, name='game_game_socket_room'),\n]",
        "detail": "app_db_tests.game_socket.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app_db_tests.game_socket.urls",
        "description": "app_db_tests.game_socket.urls",
        "peekOfCode": "urlpatterns = [\n    path('room/<int:game_id>/', views.game_game_socket_room, name='game_game_socket_room'),\n]",
        "detail": "app_db_tests.game_socket.urls",
        "documentation": {}
    },
    {
        "label": "game_game_socket_room",
        "kind": 2,
        "importPath": "app_db_tests.game_socket.views",
        "description": "app_db_tests.game_socket.views",
        "peekOfCode": "def game_game_socket_room(request, game_id):\n    try:\n        game = request.user.games_joined.get(id=game_id)\n    except:\n        return HttpResponseForbidden()\n    return render(request, 'game_socket/room.html', {'game': game})",
        "detail": "app_db_tests.game_socket.views",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "app_db_tests.gamers.management.commands.enroll_reminder",
        "description": "app_db_tests.gamers.management.commands.enroll_reminder",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'Sends an e-mail reminder to users registered more \\\n           than N days that are not joined into any games yet'\n    def add_arguments(self, parser):\n        parser.add_argument('--days', dest='days', type=int)\n    def handle(self, *args, **options):\n        emails = []\n        subject = 'Join in a game'\n        date_joined = timezone.now().today() - datetime.timedelta(days=options['days'] or 0)\n        users = User.objects.annotate(game_count=Count('games_joined'))\\",
        "detail": "app_db_tests.gamers.management.commands.enroll_reminder",
        "documentation": {}
    },
    {
        "label": "playersConfig",
        "kind": 6,
        "importPath": "app_db_tests.gamers.apps",
        "description": "app_db_tests.gamers.apps",
        "peekOfCode": "class playersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'players'",
        "detail": "app_db_tests.gamers.apps",
        "documentation": {}
    },
    {
        "label": "GameJoinForm",
        "kind": 6,
        "importPath": "app_db_tests.gamers.forms",
        "description": "app_db_tests.gamers.forms",
        "peekOfCode": "class GameJoinForm(forms.Form):\n    game = forms.ModelChoiceField(queryset=Game.objects.all(), widget=forms.HiddenInput)",
        "detail": "app_db_tests.gamers.forms",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app_db_tests.gamers.urls",
        "description": "app_db_tests.gamers.urls",
        "peekOfCode": "urlpatterns = [\n    path('register/', views.GamerRegistrationView.as_view(), name='gamer_registration'),\n    path('join-game/', views.GamerJoinGameView.as_view(), name='gamer_join_game'),\n    path('games/', views.GamerGameListView.as_view(), name='gamer_game_list'),\n    path('game/<pk>/', cache_page(60 * 15)(views.GamerGameDetailView.as_view()), name='gamer_game_detail'),\n    path('game/<pk>/<module_id>/', cache_page(60 * 15)(views.GamerGameDetailView.as_view()), name='gamer_game_detail_module'),\n]",
        "detail": "app_db_tests.gamers.urls",
        "documentation": {}
    },
    {
        "label": "GamerRegistrationView",
        "kind": 6,
        "importPath": "app_db_tests.gamers.views",
        "description": "app_db_tests.gamers.views",
        "peekOfCode": "class GamerRegistrationView(CreateView):\n    template_name = 'players/gamer/registration.html'\n    form_class = UserCreationForm\n    success_url = reverse_lazy('gamer_game_list')\n    def form_valid(self, form):\n        result = super().form_valid(form)\n        cd = form.cleaned_data\n        user = authenticate(username=cd['username'], password=cd['password1'])\n        login(self.request, user)\n        return result",
        "detail": "app_db_tests.gamers.views",
        "documentation": {}
    },
    {
        "label": "GamerJoinGameView",
        "kind": 6,
        "importPath": "app_db_tests.gamers.views",
        "description": "app_db_tests.gamers.views",
        "peekOfCode": "class GamerJoinGameView(LoginRequiredMixin, FormView):\n    game = None\n    form_class = GameJoinForm\n    def form_valid(self, form):\n        self.game = form.cleaned_data['game']\n        self.game.players.add(self.request.user)\n        return super().form_valid(form)\n    def get_success_url(self):\n        return reverse_lazy('gamer_game_detail',\n                            args=[self.game.id])",
        "detail": "app_db_tests.gamers.views",
        "documentation": {}
    },
    {
        "label": "GamerGameListView",
        "kind": 6,
        "importPath": "app_db_tests.gamers.views",
        "description": "app_db_tests.gamers.views",
        "peekOfCode": "class GamerGameListView(LoginRequiredMixin, ListView):\n    model = Game\n    template_name = 'players/game/list.html'\n    def get_queryset(self):\n        qs = super().get_queryset()\n        return qs.filter(players__in=[self.request.user])\nclass GamerGameDetailView(DetailView):\n    model = Game\n    template_name = 'players/game/detail.html'\n    def get_queryset(self):",
        "detail": "app_db_tests.gamers.views",
        "documentation": {}
    },
    {
        "label": "GamerGameDetailView",
        "kind": 6,
        "importPath": "app_db_tests.gamers.views",
        "description": "app_db_tests.gamers.views",
        "peekOfCode": "class GamerGameDetailView(DetailView):\n    model = Game\n    template_name = 'players/game/detail.html'\n    def get_queryset(self):\n        qs = super().get_queryset()\n        return qs.filter(players__in=[self.request.user])\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        game = self.get_object()\n        if 'module_id' in self.kwargs:",
        "detail": "app_db_tests.gamers.views",
        "documentation": {}
    },
    {
        "label": "IsJoined",
        "kind": 6,
        "importPath": "app_db_tests.games.api.permissions",
        "description": "app_db_tests.games.api.permissions",
        "peekOfCode": "class IsJoined(BasePermission):\n    def has_object_permission(self, request, view, obj):\n        return obj.players.filter(id=request.user.id).exists()",
        "detail": "app_db_tests.games.api.permissions",
        "documentation": {}
    },
    {
        "label": "SubjectSerializer",
        "kind": 6,
        "importPath": "app_db_tests.games.api.serializers",
        "description": "app_db_tests.games.api.serializers",
        "peekOfCode": "class SubjectSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Subject\n        fields = ['id', 'title', 'slug']\nclass ModuleSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Module\n        fields = ['order', 'title', 'description']\nclass GameSerializer(serializers.ModelSerializer):\n    modules = ModuleSerializer(many=True, read_only=True)",
        "detail": "app_db_tests.games.api.serializers",
        "documentation": {}
    },
    {
        "label": "ModuleSerializer",
        "kind": 6,
        "importPath": "app_db_tests.games.api.serializers",
        "description": "app_db_tests.games.api.serializers",
        "peekOfCode": "class ModuleSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Module\n        fields = ['order', 'title', 'description']\nclass GameSerializer(serializers.ModelSerializer):\n    modules = ModuleSerializer(many=True, read_only=True)\n    class Meta:\n        model = Game\n        fields = ['id', 'title', 'slug', 'created', 'owner', 'modules']\nclass ItemRelatedField(serializers.RelatedField):",
        "detail": "app_db_tests.games.api.serializers",
        "documentation": {}
    },
    {
        "label": "GameSerializer",
        "kind": 6,
        "importPath": "app_db_tests.games.api.serializers",
        "description": "app_db_tests.games.api.serializers",
        "peekOfCode": "class GameSerializer(serializers.ModelSerializer):\n    modules = ModuleSerializer(many=True, read_only=True)\n    class Meta:\n        model = Game\n        fields = ['id', 'title', 'slug', 'created', 'owner', 'modules']\nclass ItemRelatedField(serializers.RelatedField):\n    def to_representation(self, value):\n        return value.render()\nclass ContentSerializer(serializers.ModelSerializer):\n    item = ItemRelatedField(read_only=True)",
        "detail": "app_db_tests.games.api.serializers",
        "documentation": {}
    },
    {
        "label": "ItemRelatedField",
        "kind": 6,
        "importPath": "app_db_tests.games.api.serializers",
        "description": "app_db_tests.games.api.serializers",
        "peekOfCode": "class ItemRelatedField(serializers.RelatedField):\n    def to_representation(self, value):\n        return value.render()\nclass ContentSerializer(serializers.ModelSerializer):\n    item = ItemRelatedField(read_only=True)\n    class Meta:\n        model = Content\n        fields = ['order', 'item']\nclass ModuleWithContentsSerializer(serializers.ModelSerializer):\n    contents = ContentSerializer(many=True)",
        "detail": "app_db_tests.games.api.serializers",
        "documentation": {}
    },
    {
        "label": "ContentSerializer",
        "kind": 6,
        "importPath": "app_db_tests.games.api.serializers",
        "description": "app_db_tests.games.api.serializers",
        "peekOfCode": "class ContentSerializer(serializers.ModelSerializer):\n    item = ItemRelatedField(read_only=True)\n    class Meta:\n        model = Content\n        fields = ['order', 'item']\nclass ModuleWithContentsSerializer(serializers.ModelSerializer):\n    contents = ContentSerializer(many=True)\n    class Meta:\n        model = Module\n        fields = ['order', 'title', 'description', 'contents']",
        "detail": "app_db_tests.games.api.serializers",
        "documentation": {}
    },
    {
        "label": "ModuleWithContentsSerializer",
        "kind": 6,
        "importPath": "app_db_tests.games.api.serializers",
        "description": "app_db_tests.games.api.serializers",
        "peekOfCode": "class ModuleWithContentsSerializer(serializers.ModelSerializer):\n    contents = ContentSerializer(many=True)\n    class Meta:\n        model = Module\n        fields = ['order', 'title', 'description', 'contents']\nclass GameWithContentsSerializer(serializers.ModelSerializer):\n    modules = ModuleWithContentsSerializer(many=True)\n    class Meta:\n        model = Game\n        fields = ['id', 'title', 'slug', 'created', 'owner', 'modules']",
        "detail": "app_db_tests.games.api.serializers",
        "documentation": {}
    },
    {
        "label": "GameWithContentsSerializer",
        "kind": 6,
        "importPath": "app_db_tests.games.api.serializers",
        "description": "app_db_tests.games.api.serializers",
        "peekOfCode": "class GameWithContentsSerializer(serializers.ModelSerializer):\n    modules = ModuleWithContentsSerializer(many=True)\n    class Meta:\n        model = Game\n        fields = ['id', 'title', 'slug', 'created', 'owner', 'modules']",
        "detail": "app_db_tests.games.api.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "app_db_tests.games.api.urls",
        "description": "app_db_tests.games.api.urls",
        "peekOfCode": "app_name = 'games'\nrouter = routers.DefaultRouter()\nrouter.register('games', views.GameViewSet)\nurlpatterns = [\n    # path('subjects/', views.SubjectListView.as_view(), name='subject_list'),\n    # path('subjects/<pk>/', views.SubjectDetailView.as_view(), name='subject_detail'),\n    # path('games/<pk>/join/', views.GameJoinView.as_view(), name='game_join'),\n    path('', include(router.urls)),\n]",
        "detail": "app_db_tests.games.api.urls",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "app_db_tests.games.api.urls",
        "description": "app_db_tests.games.api.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register('games', views.GameViewSet)\nurlpatterns = [\n    # path('subjects/', views.SubjectListView.as_view(), name='subject_list'),\n    # path('subjects/<pk>/', views.SubjectDetailView.as_view(), name='subject_detail'),\n    # path('games/<pk>/join/', views.GameJoinView.as_view(), name='game_join'),\n    path('', include(router.urls)),\n]",
        "detail": "app_db_tests.games.api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app_db_tests.games.api.urls",
        "description": "app_db_tests.games.api.urls",
        "peekOfCode": "urlpatterns = [\n    # path('subjects/', views.SubjectListView.as_view(), name='subject_list'),\n    # path('subjects/<pk>/', views.SubjectDetailView.as_view(), name='subject_detail'),\n    # path('games/<pk>/join/', views.GameJoinView.as_view(), name='game_join'),\n    path('', include(router.urls)),\n]",
        "detail": "app_db_tests.games.api.urls",
        "documentation": {}
    },
    {
        "label": "SubjectListView",
        "kind": 6,
        "importPath": "app_db_tests.games.api.views",
        "description": "app_db_tests.games.api.views",
        "peekOfCode": "class SubjectListView(generics.ListAPIView):\n    queryset = Subject.objects.all()\n    serializer_class = SubjectSerializer\nclass SubjectDetailView(generics.RetrieveAPIView):\n    queryset = Subject.objects.all()\n    serializer_class = SubjectSerializer\n# class GameJoinView(APIView):\n#    authentication_classes = [BasicAuthentication]\n#    permission_classes = [IsAuthenticated]\n#    def post(self, request, pk, format=None):",
        "detail": "app_db_tests.games.api.views",
        "documentation": {}
    },
    {
        "label": "SubjectDetailView",
        "kind": 6,
        "importPath": "app_db_tests.games.api.views",
        "description": "app_db_tests.games.api.views",
        "peekOfCode": "class SubjectDetailView(generics.RetrieveAPIView):\n    queryset = Subject.objects.all()\n    serializer_class = SubjectSerializer\n# class GameJoinView(APIView):\n#    authentication_classes = [BasicAuthentication]\n#    permission_classes = [IsAuthenticated]\n#    def post(self, request, pk, format=None):\n#        game = get_object_or_404(Game, pk=pk)\n#        game.players.add(request.user)\n#        return Response({'joined': True})",
        "detail": "app_db_tests.games.api.views",
        "documentation": {}
    },
    {
        "label": "GameViewSet",
        "kind": 6,
        "importPath": "app_db_tests.games.api.views",
        "description": "app_db_tests.games.api.views",
        "peekOfCode": "class GameViewSet(viewsets.ReadOnlyModelViewSet):\n    queryset = Game.objects.all()\n    serializer_class = GameSerializer\n    @action(detail=True,\n            methods=['post'],\n            authentication_classes=[BasicAuthentication],\n            permission_classes=[IsAuthenticated])\n    def join(self, request, *args, **kwargs):\n        game = self.get_object()\n        game.players.add(request.user)",
        "detail": "app_db_tests.games.api.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_db_tests.games.migrations.0001_initial",
        "description": "app_db_tests.games.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('contenttypes', '0002_remove_content_type_name'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Game',\n            fields=[",
        "detail": "app_db_tests.games.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_db_tests.games.migrations.0002_game_gamers",
        "description": "app_db_tests.games.migrations.0002_game_gamers",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('games', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='game',\n            name='players',\n            field=models.ManyToManyField(blank=True, related_name='games_joined', to=settings.AUTH_USER_MODEL),",
        "detail": "app_db_tests.games.migrations.0002_game_gamers",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_db_tests.games.migrations.0003_game_type",
        "description": "app_db_tests.games.migrations.0003_game_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('games', '0002_game_players'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='game',\n            name='type',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "app_db_tests.games.migrations.0003_game_type",
        "documentation": {}
    },
    {
        "label": "model_name",
        "kind": 2,
        "importPath": "app_db_tests.games.templatetags.game",
        "description": "app_db_tests.games.templatetags.game",
        "peekOfCode": "def model_name(obj):\n    try:\n        return obj._meta.model_name\n    except AttributeError:\n        return None",
        "detail": "app_db_tests.games.templatetags.game",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "app_db_tests.games.templatetags.game",
        "description": "app_db_tests.games.templatetags.game",
        "peekOfCode": "register = template.Library()\n@register.filter\ndef model_name(obj):\n    try:\n        return obj._meta.model_name\n    except AttributeError:\n        return None",
        "detail": "app_db_tests.games.templatetags.game",
        "documentation": {}
    },
    {
        "label": "SubjectAdmin",
        "kind": 6,
        "importPath": "app_db_tests.games.admin",
        "description": "app_db_tests.games.admin",
        "peekOfCode": "class SubjectAdmin(admin.ModelAdmin):\n    list_display = ['title']\n    prepopulated_fields = {'slug': ('title',)}\nclass ModuleInline(admin.StackedInline):\n    model = Module\n@admin.register(Game)\nclass GameAdmin(admin.ModelAdmin):\n    list_display = ['title', 'created']\n    list_filter = ['created']\n    search_fields = ['title']",
        "detail": "app_db_tests.games.admin",
        "documentation": {}
    },
    {
        "label": "ModuleInline",
        "kind": 6,
        "importPath": "app_db_tests.games.admin",
        "description": "app_db_tests.games.admin",
        "peekOfCode": "class ModuleInline(admin.StackedInline):\n    model = Module\n@admin.register(Game)\nclass GameAdmin(admin.ModelAdmin):\n    list_display = ['title', 'created']\n    list_filter = ['created']\n    search_fields = ['title']\n    prepopulated_fields = {'slug': ('title',)}\n    inlines = [ModuleInline]",
        "detail": "app_db_tests.games.admin",
        "documentation": {}
    },
    {
        "label": "GameAdmin",
        "kind": 6,
        "importPath": "app_db_tests.games.admin",
        "description": "app_db_tests.games.admin",
        "peekOfCode": "class GameAdmin(admin.ModelAdmin):\n    list_display = ['title', 'created']\n    list_filter = ['created']\n    search_fields = ['title']\n    prepopulated_fields = {'slug': ('title',)}\n    inlines = [ModuleInline]",
        "detail": "app_db_tests.games.admin",
        "documentation": {}
    },
    {
        "label": "GamesConfig",
        "kind": 6,
        "importPath": "app_db_tests.games.apps",
        "description": "app_db_tests.games.apps",
        "peekOfCode": "class GamesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'games'",
        "detail": "app_db_tests.games.apps",
        "documentation": {}
    },
    {
        "label": "OrderField",
        "kind": 6,
        "importPath": "app_db_tests.games.fields",
        "description": "app_db_tests.games.fields",
        "peekOfCode": "class OrderField(models.PositiveIntegerField):\n    def __init__(self, for_fields=None, *args, **kwargs):\n        self.for_fields = for_fields\n        super().__init__(*args, **kwargs)\n    def pre_save(self, model_instance, add):\n        if getattr(model_instance, self.attname) is None:\n            try:\n                qs = self.model.objects.all()\n                if self.for_fields:\n                    query = {field: getattr(model_instance, field)\\",
        "detail": "app_db_tests.games.fields",
        "documentation": {}
    },
    {
        "label": "ModuleFormSet",
        "kind": 5,
        "importPath": "app_db_tests.games.forms",
        "description": "app_db_tests.games.forms",
        "peekOfCode": "ModuleFormSet = inlineformset_factory(Game, Module, fields=['title', 'description'], extra=2, can_delete=True)",
        "detail": "app_db_tests.games.forms",
        "documentation": {}
    },
    {
        "label": "subdomain_game_middleware",
        "kind": 2,
        "importPath": "app_db_tests.games.middleware",
        "description": "app_db_tests.games.middleware",
        "peekOfCode": "def subdomain_game_middleware(get_response):\n    def middleware(request):\n        host_parts = request.get_host().split('.')\n        if len(host_parts) > 2 and host_parts[0] != 'www':\n            game = get_object_or_404(Game, slug=host_parts[0])\n            game_url = reverse('game_detail',\n                                 args=[game.slug])\n            url = '{}://{}{}'.format(request.scheme,\n                                     '.'.join(host_parts[1:]),\n                                     game_url)",
        "detail": "app_db_tests.games.middleware",
        "documentation": {}
    },
    {
        "label": "Subject",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class Subject(models.Model):\n    title = models.CharField(max_length=200)\n    slug = models.SlugField(max_length=200, unique=True)\n    class Meta:\n        ordering = ['title']\n    def __str__(self):\n        return self.title\nclass Score(models.Model):\n    player = models.ForeignKey(User, related_name='player_score', on_delete=models.CASCADE)\n    score = models.IntegerField(null=False, default=0)",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "Score",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class Score(models.Model):\n    player = models.ForeignKey(User, related_name='player_score', on_delete=models.CASCADE)\n    score = models.IntegerField(null=False, default=0)\n    def __str__(self):\n        return f\"{self.player.username}: {self.score}\"\nclass PlayerGameInfo(models.Model):\n    player = models.ForeignKey(User, related_name='games_info', on_delete=models.CASCADE)\n    join_date = models.DateTimeField(auto_now_add=True)\n    disconnected = models.BooleanField(null=False, default=False)\n    avg_latency = models.IntegerField(default=0)",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "PlayerGameInfo",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class PlayerGameInfo(models.Model):\n    player = models.ForeignKey(User, related_name='games_info', on_delete=models.CASCADE)\n    join_date = models.DateTimeField(auto_now_add=True)\n    disconnected = models.BooleanField(null=False, default=False)\n    avg_latency = models.IntegerField(default=0)\n    max_latency = models.IntegerField(default=0)\n    final_score = models.OneToOneField(Score, related_name='final_game_score', on_delete=models.CASCADE)\n    def __str__(self):\n        return f\"{self.player.username}\"\nclass GameType(models.IntegerChoices):",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "GameType",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class GameType(models.IntegerChoices):\n    TYPE_ONE = 1, 'Type One'\n    TYPE_TWO = 2, 'Type Two'\n    TYPE_TREE = 3, 'Type Tree'\nclass Game(models.Model):\n    owner = models.ForeignKey(User, related_name='games_owner', on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    created = models.DateTimeField(auto_now_add=True)\n    players = models.ManyToManyField(PlayerGameInfo, related_name='game_players_info', blank=True)\n    type = models.IntegerField(choices=GameType.choices, default=GameType.TYPE_ONE)",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "Game",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class Game(models.Model):\n    owner = models.ForeignKey(User, related_name='games_owner', on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    created = models.DateTimeField(auto_now_add=True)\n    players = models.ManyToManyField(PlayerGameInfo, related_name='game_players_info', blank=True)\n    type = models.IntegerField(choices=GameType.choices, default=GameType.TYPE_ONE)\n    max_rounds = models.IntegerField(null=False, default=3)\n    num_balls = models.IntegerField(null=False, default=1)\n    class Meta:\n        ordering = ['-created']",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "Round",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class Round(models.Model):\n    game = models.ForeignKey(Game, related_name='game_rounds', on_delete=models.CASCADE)    \n    start_time = models.DateTimeField()\n    end_time = models.DateTimeField()\n    players_scores = models.ManyToManyField(Score, related_name='round_player_score', blank=True)\n    # class Meta:\n    def __str__(self):\n        return self.title\nclass Module(models.Model):\n    game = models.ForeignKey(Game, related_name='modules', on_delete=models.CASCADE)",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "Module",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class Module(models.Model):\n    game = models.ForeignKey(Game, related_name='modules', on_delete=models.CASCADE)\n    title = models.CharField(max_length=200)\n    description = models.TextField(blank=True)\n    order = OrderField(blank=True, for_fields=['game'])\n    class Meta:\n        ordering = ['order']\n    def __str__(self):\n        return f'{self.order}. {self.title}'\nclass Content(models.Model):",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "Content",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class Content(models.Model):\n    module = models.ForeignKey(Module, related_name='contents', on_delete=models.CASCADE)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE, limit_choices_to={'model__in':(\n        'text',\n        'video',\n        'image',\n        'file')})\n    object_id = models.PositiveIntegerField()\n    item = GenericForeignKey('content_type', 'object_id')\n    order = OrderField(blank=True, for_fields=['module'])",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "ItemBase",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class ItemBase(models.Model):\n    owner = models.ForeignKey(User, related_name='%(class)s_related', on_delete=models.CASCADE)\n    title = models.CharField(max_length=250)\n    created = models.DateTimeField(auto_now_add=True)\n    updated = models.DateTimeField(auto_now=True)\n    class Meta:\n        abstract = True\n    def __str__(self):\n        return self.title\n    def render(self):",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "Text",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class Text(ItemBase):\n    content = models.TextField()\nclass File(ItemBase):\n    file = models.FileField(upload_to='files')\nclass Image(ItemBase):\n       file = models.FileField(upload_to='images')\nclass Video(ItemBase):\n    url = models.URLField()",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "File",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class File(ItemBase):\n    file = models.FileField(upload_to='files')\nclass Image(ItemBase):\n       file = models.FileField(upload_to='images')\nclass Video(ItemBase):\n    url = models.URLField()",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class Image(ItemBase):\n       file = models.FileField(upload_to='images')\nclass Video(ItemBase):\n    url = models.URLField()",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "Video",
        "kind": 6,
        "importPath": "app_db_tests.games.models",
        "description": "app_db_tests.games.models",
        "peekOfCode": "class Video(ItemBase):\n    url = models.URLField()",
        "detail": "app_db_tests.games.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app_db_tests.games.urls",
        "description": "app_db_tests.games.urls",
        "peekOfCode": "urlpatterns = [\n    path('mine/', views.ManageGameListView.as_view(), name='manage_game_list'),\n    path('create/', views.GameCreateView.as_view(), name='game_create'),\n    path('<pk>/edit/', views.GameUpdateView.as_view(), name='game_edit'),\n    path('<pk>/delete/', views.GameDeleteView.as_view(), name='game_delete'),\n    path('<pk>/module/', views.GameModuleUpdateView.as_view(), name='game_module_update'),\n    path('module/<int:module_id>/content/<model_name>/create/', views.ContentCreateUpdateView.as_view(), name='module_content_create'),\n    path('module/<int:module_id>/content/<model_name>/<id>/', views.ContentCreateUpdateView.as_view(), name='module_content_update'),\n    path('content/<int:id>/delete/', views.ContentDeleteView.as_view(), name='module_content_delete'),\n    path('module/<int:module_id>/', views.ModuleContentListView.as_view(), name='module_content_list'),",
        "detail": "app_db_tests.games.urls",
        "documentation": {}
    },
    {
        "label": "ManageGameListView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class ManageGameListView(ListView):\n    model = Game\n    template_name = 'games/manage/game/list.html'\n    def get_queryset(self):\n        qs = super().get_queryset()\n        return qs.filter(owner=self.request.user)\nclass OwnerMixin:\n    def get_queryset(self):\n        qs = super().get_queryset()\n        return qs.filter(owner=self.request.user)",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "OwnerMixin",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class OwnerMixin:\n    def get_queryset(self):\n        qs = super().get_queryset()\n        return qs.filter(owner=self.request.user)\nclass OwnerEditMixin:\n    def form_valid(self, form):\n        form.instance.owner = self.request.user\n        return super().form_valid(form)\nclass GameForm(forms.ModelForm):\n    class Meta:",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "OwnerEditMixin",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class OwnerEditMixin:\n    def form_valid(self, form):\n        form.instance.owner = self.request.user\n        return super().form_valid(form)\nclass GameForm(forms.ModelForm):\n    class Meta:\n        model = Game\n        fields = ['title', 'slug']\n        labels = {\n            'title': 'Name',",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "GameForm",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class GameForm(forms.ModelForm):\n    class Meta:\n        model = Game\n        fields = ['title', 'slug']\n        labels = {\n            'title': 'Name',\n            'slug': 'Slug',\n        }\nclass OwnerGameFormMixin(OwnerMixin, LoginRequiredMixin, PermissionRequiredMixin):\n    model = Game",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "OwnerGameFormMixin",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class OwnerGameFormMixin(OwnerMixin, LoginRequiredMixin, PermissionRequiredMixin):\n    model = Game\n    form_class = GameForm\n    # fields = ['title', 'slug']\n    success_url = reverse_lazy('manage_game_list')\nclass OwnerGameMixin(OwnerMixin, LoginRequiredMixin, PermissionRequiredMixin):\n    model = Game\n    form_class = GameForm\n    # fields = ['title', 'slug']\n    success_url = reverse_lazy('manage_game_list')",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "OwnerGameMixin",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class OwnerGameMixin(OwnerMixin, LoginRequiredMixin, PermissionRequiredMixin):\n    model = Game\n    form_class = GameForm\n    # fields = ['title', 'slug']\n    success_url = reverse_lazy('manage_game_list')\nclass OwnerGameEditMixin(OwnerGameMixin, OwnerEditMixin):\n    template_name = 'games/manage/game/form.html'\nclass ManageGameListView(OwnerGameMixin, ListView):\n    template_name = 'games/manage/game/list.html'\n    permission_required = 'games.view_game'",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "OwnerGameEditMixin",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class OwnerGameEditMixin(OwnerGameMixin, OwnerEditMixin):\n    template_name = 'games/manage/game/form.html'\nclass ManageGameListView(OwnerGameMixin, ListView):\n    template_name = 'games/manage/game/list.html'\n    permission_required = 'games.view_game'\nclass GameCreateView(OwnerGameEditMixin, CreateView):\n    permission_required = 'games.add_game'\nclass GameUpdateView(OwnerGameEditMixin, UpdateView):\n    permission_required = 'games.change_game'\nclass GameDeleteView(OwnerGameMixin, DeleteView):",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "ManageGameListView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class ManageGameListView(OwnerGameMixin, ListView):\n    template_name = 'games/manage/game/list.html'\n    permission_required = 'games.view_game'\nclass GameCreateView(OwnerGameEditMixin, CreateView):\n    permission_required = 'games.add_game'\nclass GameUpdateView(OwnerGameEditMixin, UpdateView):\n    permission_required = 'games.change_game'\nclass GameDeleteView(OwnerGameMixin, DeleteView):\n    template_name = 'games/manage/game/delete.html'\n    permission_required = 'games.delete_game'",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "GameCreateView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class GameCreateView(OwnerGameEditMixin, CreateView):\n    permission_required = 'games.add_game'\nclass GameUpdateView(OwnerGameEditMixin, UpdateView):\n    permission_required = 'games.change_game'\nclass GameDeleteView(OwnerGameMixin, DeleteView):\n    template_name = 'games/manage/game/delete.html'\n    permission_required = 'games.delete_game'\nclass GameModuleUpdateView(TemplateResponseMixin, View):\n    template_name = 'games/manage/module/formset.html'\n    game = None",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "GameUpdateView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class GameUpdateView(OwnerGameEditMixin, UpdateView):\n    permission_required = 'games.change_game'\nclass GameDeleteView(OwnerGameMixin, DeleteView):\n    template_name = 'games/manage/game/delete.html'\n    permission_required = 'games.delete_game'\nclass GameModuleUpdateView(TemplateResponseMixin, View):\n    template_name = 'games/manage/module/formset.html'\n    game = None\n    def get_formset(self, data=None):\n        return ModuleFormSet(instance=self.game, data=data)",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "GameDeleteView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class GameDeleteView(OwnerGameMixin, DeleteView):\n    template_name = 'games/manage/game/delete.html'\n    permission_required = 'games.delete_game'\nclass GameModuleUpdateView(TemplateResponseMixin, View):\n    template_name = 'games/manage/module/formset.html'\n    game = None\n    def get_formset(self, data=None):\n        return ModuleFormSet(instance=self.game, data=data)\n    def dispatch(self, request, pk):\n        self.game = get_object_or_404(Game, id=pk, owner=request.user)",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "GameModuleUpdateView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class GameModuleUpdateView(TemplateResponseMixin, View):\n    template_name = 'games/manage/module/formset.html'\n    game = None\n    def get_formset(self, data=None):\n        return ModuleFormSet(instance=self.game, data=data)\n    def dispatch(self, request, pk):\n        self.game = get_object_or_404(Game, id=pk, owner=request.user)\n        return super().dispatch(request, pk)\n    def get(self, request, *args, **kwargs):\n        formset = self.get_formset()",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "ContentCreateUpdateView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class ContentCreateUpdateView(TemplateResponseMixin, View):\n    module = None\n    model = None\n    obj = None\n    template_name = 'games/manage/content/form.html'\n    def get_model(self, model_name):\n        if model_name in ['text', 'video', 'image', 'file']:\n            return apps.get_model(app_label='games', model_name=model_name)\n        return None\n    def get_form(self, model, *args, **kwargs):",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "ContentDeleteView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class ContentDeleteView(View):\n    def post(self, request, id):\n        content = get_object_or_404(Content, id=id, module__game__owner=request.user)\n        module = content.module\n        content.item.delete()\n        content.delete()\n        return redirect('module_content_list', module.id)\nclass ModuleContentListView(TemplateResponseMixin, View):\n    template_name = 'games/manage/module/content_list.html'\n    def get(self, request, module_id):",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "ModuleContentListView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class ModuleContentListView(TemplateResponseMixin, View):\n    template_name = 'games/manage/module/content_list.html'\n    def get(self, request, module_id):\n        module = get_object_or_404(Module, id=module_id, game__owner=request.user)\n        return self.render_to_response({'module': module})\nclass ModuleOrderView(CsrfExemptMixin, JsonRequestResponseMixin, View):\n    def post(self, request):\n        for id, order in self.request_json.items():\n            Module.objects.filter(id=id, game__owner=request.user).update(order=order)\n        return self.render_json_response({'saved': 'OK'})",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "ModuleOrderView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class ModuleOrderView(CsrfExemptMixin, JsonRequestResponseMixin, View):\n    def post(self, request):\n        for id, order in self.request_json.items():\n            Module.objects.filter(id=id, game__owner=request.user).update(order=order)\n        return self.render_json_response({'saved': 'OK'})\nclass ContentOrderView(CsrfExemptMixin, JsonRequestResponseMixin, View):\n    def post(self, request):\n        for id, order in self.request_json.items():\n            Content.objects.filter(id=id, module__game__owner=request.user).update(order=order)\n        return self.render_json_response({'saved': 'OK'})",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "ContentOrderView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class ContentOrderView(CsrfExemptMixin, JsonRequestResponseMixin, View):\n    def post(self, request):\n        for id, order in self.request_json.items():\n            Content.objects.filter(id=id, module__game__owner=request.user).update(order=order)\n        return self.render_json_response({'saved': 'OK'})\nclass GameListView(TemplateResponseMixin, View):\n    model = Game\n    template_name = 'games/game/list.html'\n    def get(self, request):\n        all_games = Game.objects.annotate(total_modules=Count('modules'))",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "GameListView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class GameListView(TemplateResponseMixin, View):\n    model = Game\n    template_name = 'games/game/list.html'\n    def get(self, request):\n        all_games = Game.objects.annotate(total_modules=Count('modules'))\n        games = cache.get('all_games')\n        if not games:\n            games = all_games\n            cache.set('all_games', games)\n        return self.render_to_response({'games': games})",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "GameDetailView",
        "kind": 6,
        "importPath": "app_db_tests.games.views",
        "description": "app_db_tests.games.views",
        "peekOfCode": "class GameDetailView(DetailView):\n    model = Game\n    template_name = 'games/game/detail.html'\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context['join_form'] = GameJoinForm(initial={'game':self.object})\n        return context",
        "detail": "app_db_tests.games.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app_db_tests.manage",
        "description": "app_db_tests.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'game_config.settings.local')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "app_db_tests.manage",
        "documentation": {}
    }
]